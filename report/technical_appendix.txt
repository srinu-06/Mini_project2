# Technical Appendix: Normalization Process and Adherence to 3NF

## Introduction
This document details the normalization process applied to the non-normalized sales dataset and explains how the final schema adheres to the principles of Third Normal Form (3NF). The goal of normalization is to eliminate redundancy, ensure data integrity, and optimize query performance.

## Initial Non-Normalized Dataset
The initial dataset contained the following columns:
- `OrderID`
- `OrderDate`
- `CustomerID`
- `CustomerName`
- `CustomerEmail`
- `Region`
- `Country`
- `ProductID`
- `ProductName`
- `Category`
- `UnitPrice`
- `Quantity`

This dataset exhibited redundancy and did not conform to any normal form.

## Steps to Achieve 3NF

### Step 1: First Normal Form (1NF)
To achieve 1NF, we ensured that:
1. Each column contains atomic values.
2. Each row is uniquely identifiable.

**Actions Taken:**
- Removed duplicate rows.
- Ensured that each cell contains a single value (e.g., no lists or nested data).

### Step 2: Second Normal Form (2NF)
To achieve 2NF, we eliminated partial dependencies. This required splitting the dataset into multiple tables based on functional dependencies.

**Tables Created:**
1. **Customers**:
   - `CustomerID` (Primary Key)
   - `CustomerName`
   - `CustomerEmail`
   - `Region`
   - `Country`

2. **Products**:
   - `ProductID` (Primary Key)
   - `ProductName`
   - `Category`
   - `UnitPrice`

3. **Orders**:
   - `OrderID` (Primary Key)
   - `OrderDate`
   - `CustomerID` (Foreign Key)
   - `Region`
   - `Country`

4. **OrderDetails**:
   - `OrderID` (Composite Key with `ProductID`)
   - `ProductID` (Composite Key with `OrderID`)
   - `Quantity`

### Step 3: Third Normal Form (3NF)
To achieve 3NF, we eliminated transitive dependencies. This ensured that non-key attributes are only dependent on the primary key.

**Actions Taken:**
- Removed any attributes that were indirectly dependent on the primary key.
- Ensured that each table contains data related to a single entity.

## Final Schema
The final schema adheres to 3NF and consists of the following tables:

1. **Customers**:
   - `CustomerID` (Primary Key)
   - `CustomerName`
   - `CustomerEmail`
   - `Region`
   - `Country`

2. **Products**:
   - `ProductID` (Primary Key)
   - `ProductName`
   - `Category`
   - `UnitPrice`

3. **Orders**:
   - `OrderID` (Primary Key)
   - `OrderDate`
   - `CustomerID` (Foreign Key)
   - `Region`
   - `Country`

4. **OrderDetails**:
   - `OrderID` (Composite Key with `ProductID`)
   - `ProductID` (Composite Key with `OrderID`)
   - `Quantity`

## Justification for 3NF
1. **No Partial Dependencies**:
   - Each non-key attribute is fully functionally dependent on the primary key.

2. **No Transitive Dependencies**:
   - Non-key attributes are not dependent on other non-key attributes.

3. **Data Integrity**:
   - The schema ensures data consistency and eliminates redundancy.

## Conclusion
The normalization process transformed the dataset into a schema that adheres to 3NF. This ensures efficient data storage, eliminates redundancy, and facilitates accurate and optimized queries.
